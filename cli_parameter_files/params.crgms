# INPUT PARAMETER FILE for Protonation Microstates Analysis with Weighted Correlation
# Tool: ms_protonation
# Usage: ms_protonation param.crgms
#.......................................................................

list_head3_ionizables = False
mcce_dir = ./
msout_file = pH7eH0ms.txt
output_dir = crgms_corr
min_occ = 0
# n_top with no value or commented out means "return all charge ms"
n_top =

residue_kinds =  [ASP, PL9, LYS, GLU, HIS, TYR, NTR, CTR]

correl_resids = [LYSN0253_, GLUN0226_, GLUN0173_, ASPO0085_, GLUO0087_] 
corr_method = pearson
corr_cutoff = 0
cluster_min_res_count = 6
n_clusters = 9

# FILE NAMES
all_res_crg_csv = all_res_crg_status.csv
all_crg_count_resoi_csv = all_crg_count_resoi.csv
fixed_res_of_interest_csv = fixed_res_of_interest.csv
res_of_interest_data_csv = crg_count_res_of_interest.csv

# FIGURES
fig_show = False

energy_histogram.save_name = enthalpy_dist.png
energy_histogram.fig_size = (8,8)
corr_heatmap.save_name = corr.png
corr_heatmap.fig_size = (20,8)
corr_heatmap.title = Correlation

# CHARGE HISTOGRAMS
# Note: "charge_histogram0" with no filtering is always included & saved to 'crgms_logcount.png'.
#
# Reserved words (do not change): Emin: energy minimum; Eaver: energy average; Emax: energy maximum.
#
# Uncomment to include:
#charge_histogram1.bounds = (Emin, Emin + 1.36) 
#charge_histogram1.title = Protonation MS Counts - Energy within 1.36 kcal/mol of Lowest
#charge_histogram1.save_name = crgms_logcount_lowestE.png

#charge_histogram2.bounds = (Eaver - 0.68, Eaver + 0.68)
#charge_histogram2.title = Protonation MS Count - Energy within 0.5 pH (0.68 kcal/mol) of Average
#charge_histogram2.save_name = crgms_logcount_averE.png

#charge_histogram3.bounds = (Emax - 1.36, Emax)
#charge_histogram3.title = Protonation MS Count - Energy within 1.36 kcal/mol of Highest
#charge_histogram3.save_name = crgms_logcount_highestE.png

# Example with free bounds:

#charge_histogramB.bounds = (-5, 5)
#charge_histogramB.title = Protonation MS Counts - Energy in (-5, 5) kcal/mol range
#charge_histogramB.save_name = crgms_logcount_Erange.png


@=========================================================================
@ DESCRIPTION
@ Input file to perform charge (protonation) microstates analysis with weighted correlation.
@ Original filename: params.crgms :: Entries above this section can be changed as long as the 
@ format is retained.
@
@ FORMAT SPECIFICATION:
@
@ Data lines:
@   All non-blank, non-commented lines will be parsed for data with this format: <identifier> = <value(s)>.
@   Spaces around the equal sign are not required.
@   Quotes around strings values, or items in a list or tuple are not required.

@ Comments: Not on a data line.

@ Data entry format:
@   * Values as lists: residue_kinds and correl_resids.
@     Examples:
@     residue_kinds = [ ASP, "GLU", arg; HIS, LYS, TYR, NTR, 'CTR']
@     correl_resids = [ GLUA0035_,  GLUA0055_, HISA0015_ ASPA0119_  ]
@     correl_resids = [
@        'NTRA0001_'
@        'LYSA0013_';
@        'HISA0015_'
@        'ASPA0018_', 'TYRA0020_'
@        'ARGA0021_'
@        TYRA0023_
@        'LYSA0033_'
@        'GLUA0035_',
@        ]

@   * Values as 2-tuple, e.g.: .fig_size, .bounds: 
@     Comma separated values within parentheses: (20, 8), (20,8).
@   * All identifiers for plots can have attributes given with an appended '.<attribute>' string:
@     E.g.: energy_histogram.fig_size = (8,8).
@    - Valid attributes: .save_name, .fig_size, .title (and .bounds for the 'charge_histogramX' identifier).
@
@ OPTION TO RUN THE TOOL to get a list of residues & exit (if not commented out):
@ ======================================================================================
@ Purpose: To return multi-line string of resids ready to use as values of the 'correl_resids' identifier.
@ Default is False. If True, the list will be output to screen and the program will exit.
@ Valid values: false, true, False, True.
@
@ list_head3_ionizables = False
 
@ RUN & OUTPUT FOLDERS - MICROSTATES FILE SELECTION
@ ========================================================================================
@ mcce_dir :: The directory of a MCCE run containing a ms_out subfolder
@          :: Default: current directory.
@
@ mcce_dir = ./

@ The 'msout file' that resides in mcce_dir/ms_out is named using the ph and eh points of
@ the titration, e.g.: pH7eH0ms.txt, pH7.00eH0.00ms.txt, pH4.50eH30.00ms.txt, etc.
@
@ msout_file = pH7eH0ms.txt

@ output_dir :: The mcce_dir subdirectory for saving the analysis files
@            :: Default: crgms_corr_ph{p}eh{e} with p and e being the ph and eh values in the msout file name.
@
@ output_dir = crgms_corr

@ occupancy threshold used for returning unique charge ms; Default = 0.02
@
@ min_occ = 0

@ n_top: number of unique charge ms to return; Default: "" (all)
@
@ n_top =

@ RESIDUES SELECTION
@ ========================================================================================
@ Notes:
@  - residues codes or conformer ids can be given with or without quotes.
@  - order or duplicates do not matter.
@  - square brackets are required.
@
@ residue_kinds :: 3-letter code of residues of interest for filtering the microstates collection.
@ Default: If the 'residue_kinds line' is absent, commented out, or its value is an empty list,
@          all ionizable residues are used for filtering.
@
@ residue_kinds =  [ASP, PL9, LYS, GLU, HIS, TYR, NTR, CTR]

@ correl_resids :: list of conformer ids (among residue_kinds) to test for correlation.
@  Format: 3-letter resid + chain letter + 4 digit seqnum + _
@
@ correl_resids = [LYSN0253_, GLUN0226_, GLUN0173_, ASPO0085_, GLUO0087_]  

@ CORRELATION PARAMETERS
@ ========================================================================================
@ corr_method: either pearson (default) or spearman:
@ corr_method = pearson
@ corr_cutoff = 0

@ Minimum number of residues needed to apply clustering; Default is 6:
@ cluster_min_res_count = 6

@ Change the number of clusters to pass to `cluster_corr_matrix` from default 5:
@ n_clusters = 9

@ INPUT/OUTPUT PATHS SELECTION
@ ======================================================================================== 
@ CSV output file names:

@ free and fixed residues charges :: Default: all_res_crg_status.csv
@ all_res_crg_csv = all_res_crg_status.csv

@ residue of interest data :: Default: fixed_res_of_interest.csv
@ fixed_res_of_interest_csv = fixed_res_of_interest.csv

@ residue of interest with count? :: Default: crg_count_res_of_interest.csv
@ res_of_interest_data_csv = crg_count_res_of_interest.csv

@ residue count & crg including residues for correlation :: Default: all_crg_count_resoi.csv
@ all_crg_count_resoi_csv = all_crg_count_resoi.csv

@ FIGURES PARAMETERS & ATTRIBUTES
@ ========================================================================================
@ Global flag to indicate whether to show each plot:
@ fig_show = False

@ Filenames:
@ energy_histogram.save_name = enthalpy_dist.png
@ corr_heatmap.save_name = corr.png

@ Titles:
@ Add a title attribute to the correlation heatmap if needed (default is no title):
@ corr_heatmap.title = Correlation

@ Figure sizes
@ energy_histogram.fig_size = (8,8)
@ corr_heatmap.fig_size = (20,8)

@ Charge microstates histograms:
@   Multiple histograms can be created using the 'charge_histogram' identifier,
@   The identifier MUST start with 'charge_histogram' and can end with integers or characters
@   for clarity, in which case, make sure the histograms identifiers' names are unique.
@
@   Keywords: Emin, Eaver & Emax will be replaced with the corresponding protonation ms energies
@   Examples for plots with bounds vz Emin, Eaver & Emax:

@ charge_histogram0: Always included, creates all_crg_count_res: no filtering, value = (None, None):
@ charge_histogram0.bounds = (None, None)
@ charge_histogram0.title = Protonation MS Counts
@ charge_histogram0.save_name = crgms_logcount.png

@ charge_histogram1.bounds = (Emin, Emin + 1.36) 
@ charge_histogram1.title = Protonation MS Counts - Energy within 1.36 kcal/mol of Lowest
@ charge_histogram1.save_name = crgms_logcount_lowestE.png

@ charge_histogram2.bounds = (Eaver - 0.68, Eaver + 0.68)
@ charge_histogram2.title = Protonation MS Count - Energy within 0.5 pH (0.68 kcal/mol) of Average
@ charge_histogram2.save_name = crgms_logcount_averE.png

@ charge_histogram3.bounds = (Emax - 1.36, Emax)
@ charge_histogram3.title = Protonation MS Count - Energy within 1.36 kcal/mol of Highest
@ charge_histogram3.save_name = crgms_logcount_highestE.png

@ Example with free bounds:
@ charge_histogramB.bounds = (-5, 5)
@ charge_histogramB.title = Protonation MS Counts - Energy in (-5, 5) kcal/mol range
@ charge_histogramB.save_name = crgms_logcount_Erange.png
